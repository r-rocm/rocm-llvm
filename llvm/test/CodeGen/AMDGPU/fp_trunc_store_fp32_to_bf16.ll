; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 4
; RUN: llc -mtriple=amdgcn-amd-amdhsa -mcpu=gfx90a %s -o - | FileCheck %s

define void @scalar(float %num, ptr addrspace(1) %p) {
; CHECK-LABEL: scalar:
; CHECK:       ; %bb.0: ; %entry
; CHECK-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; CHECK-NEXT:    v_mov_b32_e32 v3, v2
; CHECK-NEXT:    v_mov_b32_e32 v2, v1
; CHECK-NEXT:    global_store_short_d16_hi v[2:3], v0, off
; CHECK-NEXT:    s_waitcnt vmcnt(0)
; CHECK-NEXT:    s_setpc_b64 s[30:31]
entry:
  %conv = fptrunc float %num to bfloat
  store bfloat %conv, ptr addrspace(1) %p, align 8
  ret void
}

define void @v2(<2 x float> %num, ptr addrspace(1) %p) {
; CHECK-LABEL: v2:
; CHECK:       ; %bb.0: ; %entry
; CHECK-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; CHECK-NEXT:    s_mov_b32 s4, 0x7060302
; CHECK-NEXT:    v_perm_b32 v0, v1, v0, s4
; CHECK-NEXT:    global_store_dword v[2:3], v0, off
; CHECK-NEXT:    s_waitcnt vmcnt(0)
; CHECK-NEXT:    s_setpc_b64 s[30:31]
entry:
  %conv = fptrunc <2 x float> %num to <2 x bfloat>
  store <2 x bfloat> %conv, ptr addrspace(1) %p, align 8
  ret void
}

define void @v3(<3 x float> %num, ptr addrspace(1) %p) {
; CHECK-LABEL: v3:
; CHECK:       ; %bb.0: ; %entry
; CHECK-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; CHECK-NEXT:    v_mov_b32_e32 v5, v4
; CHECK-NEXT:    v_mov_b32_e32 v4, v3
; CHECK-NEXT:    s_mov_b32 s4, 0x7060302
; CHECK-NEXT:    v_perm_b32 v0, v1, v0, s4
; CHECK-NEXT:    global_store_short_d16_hi v[4:5], v2, off offset:4
; CHECK-NEXT:    global_store_dword v[4:5], v0, off
; CHECK-NEXT:    s_waitcnt vmcnt(0)
; CHECK-NEXT:    s_setpc_b64 s[30:31]
entry:
  %conv = fptrunc <3 x float> %num to <3 x bfloat>
  store <3 x bfloat> %conv, ptr addrspace(1) %p, align 8
  ret void
}

define void @v4(<4 x float> %num, ptr addrspace(1) %p) {
; CHECK-LABEL: v4:
; CHECK:       ; %bb.0: ; %entry
; CHECK-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; CHECK-NEXT:    s_mov_b32 s4, 0x7060302
; CHECK-NEXT:    v_perm_b32 v3, v3, v2, s4
; CHECK-NEXT:    v_perm_b32 v2, v1, v0, s4
; CHECK-NEXT:    global_store_dwordx2 v[4:5], v[2:3], off
; CHECK-NEXT:    s_waitcnt vmcnt(0)
; CHECK-NEXT:    s_setpc_b64 s[30:31]
entry:
  %conv = fptrunc <4 x float> %num to <4 x bfloat>
  store <4 x bfloat> %conv, ptr addrspace(1) %p, align 8
  ret void
}

define void @v8(<8 x float> %num, ptr addrspace(1) %p) {
; CHECK-LABEL: v8:
; CHECK:       ; %bb.0: ; %entry
; CHECK-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; CHECK-NEXT:    s_mov_b32 s4, 0x7060302
; CHECK-NEXT:    v_perm_b32 v7, v7, v6, s4
; CHECK-NEXT:    v_perm_b32 v6, v5, v4, s4
; CHECK-NEXT:    v_perm_b32 v5, v3, v2, s4
; CHECK-NEXT:    v_perm_b32 v4, v1, v0, s4
; CHECK-NEXT:    global_store_dwordx4 v[8:9], v[4:7], off
; CHECK-NEXT:    s_waitcnt vmcnt(0)
; CHECK-NEXT:    s_setpc_b64 s[30:31]
entry:
  %conv = fptrunc <8 x float> %num to <8 x bfloat>
  store <8 x bfloat> %conv, ptr addrspace(1) %p, align 8
  ret void
}

define void @v16(<16 x float> %num, ptr addrspace(1) %p) {
; CHECK-LABEL: v16:
; CHECK:       ; %bb.0: ; %entry
; CHECK-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; CHECK-NEXT:    s_mov_b32 s4, 0x7060302
; CHECK-NEXT:    v_perm_b32 v7, v7, v6, s4
; CHECK-NEXT:    v_perm_b32 v6, v5, v4, s4
; CHECK-NEXT:    v_perm_b32 v5, v3, v2, s4
; CHECK-NEXT:    v_perm_b32 v4, v1, v0, s4
; CHECK-NEXT:    v_perm_b32 v3, v15, v14, s4
; CHECK-NEXT:    v_perm_b32 v2, v13, v12, s4
; CHECK-NEXT:    v_perm_b32 v1, v11, v10, s4
; CHECK-NEXT:    v_perm_b32 v0, v9, v8, s4
; CHECK-NEXT:    global_store_dwordx4 v[16:17], v[0:3], off offset:16
; CHECK-NEXT:    global_store_dwordx4 v[16:17], v[4:7], off
; CHECK-NEXT:    s_waitcnt vmcnt(0)
; CHECK-NEXT:    s_setpc_b64 s[30:31]
entry:
  %conv = fptrunc <16 x float> %num to <16 x bfloat>
  store <16 x bfloat> %conv, ptr addrspace(1) %p, align 8
  ret void
}

define void @v32(<32 x float> %num, ptr addrspace(1) %p) {
; CHECK-LABEL: v32:
; CHECK:       ; %bb.0: ; %entry
; CHECK-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; CHECK-NEXT:    buffer_load_dword v31, off, s[0:3], s32
; CHECK-NEXT:    buffer_load_dword v33, off, s[0:3], s32 offset:8
; CHECK-NEXT:    buffer_load_dword v32, off, s[0:3], s32 offset:4
; CHECK-NEXT:    s_mov_b32 s4, 0x7060302
; CHECK-NEXT:    v_perm_b32 v7, v7, v6, s4
; CHECK-NEXT:    v_perm_b32 v6, v5, v4, s4
; CHECK-NEXT:    v_perm_b32 v4, v1, v0, s4
; CHECK-NEXT:    v_perm_b32 v1, v11, v10, s4
; CHECK-NEXT:    v_perm_b32 v0, v9, v8, s4
; CHECK-NEXT:    v_perm_b32 v11, v23, v22, s4
; CHECK-NEXT:    v_perm_b32 v10, v21, v20, s4
; CHECK-NEXT:    v_perm_b32 v9, v19, v18, s4
; CHECK-NEXT:    v_perm_b32 v8, v17, v16, s4
; CHECK-NEXT:    v_perm_b32 v5, v3, v2, s4
; CHECK-NEXT:    v_perm_b32 v3, v15, v14, s4
; CHECK-NEXT:    v_perm_b32 v2, v13, v12, s4
; CHECK-NEXT:    v_perm_b32 v14, v29, v28, s4
; CHECK-NEXT:    v_perm_b32 v13, v27, v26, s4
; CHECK-NEXT:    v_perm_b32 v12, v25, v24, s4
; CHECK-NEXT:    s_waitcnt vmcnt(2)
; CHECK-NEXT:    v_perm_b32 v15, v31, v30, s4
; CHECK-NEXT:    s_waitcnt vmcnt(0)
; CHECK-NEXT:    global_store_dwordx4 v[32:33], v[8:11], off offset:32
; CHECK-NEXT:    global_store_dwordx4 v[32:33], v[0:3], off offset:16
; CHECK-NEXT:    global_store_dwordx4 v[32:33], v[12:15], off offset:48
; CHECK-NEXT:    global_store_dwordx4 v[32:33], v[4:7], off
; CHECK-NEXT:    s_waitcnt vmcnt(0)
; CHECK-NEXT:    s_setpc_b64 s[30:31]
entry:
  %conv = fptrunc <32 x float> %num to <32 x bfloat>
  store <32 x bfloat> %conv, ptr addrspace(1) %p, align 8
  ret void
}
